


 JS
 -------
 
  -> scripting lang for web-pages in browser-envi
  +
  -> server-side programming lang using NodeJS.
  
  -> to develope stand-alone appln.
  -> command-line tools ( testing , build tools )
  
  -> to develope mobile-appln
  
  -------------------------------------------------------
  
  Features
  
  --> functional programming lang.
  --> OO programming lang.
  
  --> supports dynamic data-types
  --> supports closures
  
  --> Single-threaded lang 
  --> supports better concurrency using JS envi.
  
  ---------------------------------------------------------
  
  
  JS lang is based on 'ECMAScript' spec.
  
  latest : ECMAScript 2015 or ES6
  
  ----------------------------------------------------------
  
  
  how to run JS programs ?
  
  
  we need 'JS engine'  which implemented ECMAScript spec
  
  every browser has own default JS-engine
  
  e.g
  
  browsers
  
  chrome  --> v8 ( c++ )
  firefox --> rhino
  safari  --> nitro
  IE      --> chakra
  
  non-browser
  
  NodeJS  --> v8
  JVM     --> nashorn
  ApacheCouchDB
  
  -------------------------------------------------------------
  
  
  JS learning resources
  
  
  1. MDN Javascript
  2. Principles of OO JS ( book )
  3. JS Good Parts ( book )
  
  4. jstherightway.org
  5. javascriptissexy.com
  
  ---------------------------------------------------------------
  
  
  selected JS topics for today
  
  1. 'this' keyword
  2. func closure
  3. inheritance
  
  
  4. JS with HTML page
  5. concurrency in JS
  
  ---------------------------------------------------------------------
  
  
  
  
  when initial JS loaded in browser-envi , JS engine
  
  --> will create 'Global Execution Context '
  
      global-obj  ---> 'window'  for browser.
      this        ---> window
      
  
  -----------------------------------------------------------------------
  
  Execution Context - phases
  -----------------------------
  
  --> creation phase
  
      all variables are hoisted ( lifting-up ) to top of execution-context
      and
      will get assigned with default-value i.e 'undefined'
      
  
  --> execution phase
  
      will execute instruction in that-order
  
  
  
  
  -------------------------------------
  
  
  day-2
  
  
  --> JS with HTML
  --> concurrency support
  
  --> JS library vs F.Ws
  
  --> Angular Basics
  
  
  ---------------------------
  
  
  
  
  what JS can do with HTML page in browser-envi?
  
  JS  using Web APIs will bring dynamic func to HTML page.
  
  Web APIs  --> DOM , XHR , Timer , etc....
  
  all Web APIs implemented/provided by browser based w3c standards.
  
  
  using DOM API
  ----------------
  
   --> can create/retreive/update/delete HTML elements
   --> can change HTML element's attribute values
   --> can change element's style
   --> can change element's text content
   --> can do form-validation
   --> can create rich UI components
   
  using XHR API
  ----------------
   --> can communicate with server async , update response in existing page ( AJAX )
   
  Timer API
  -----------
  
  setTimeout() ,, setInterval()
  
  HTML-5 Web APIs
  ----------------
  
    1. canvas  --> drawing eleemnts
    2. audio/video
    3. storage API
    4. Geo API
    5. WebWorker
    
  WebGL API
  --------------
  
    --> 2D & 3D effects shapes   
   
  
  ---------------------------------------
  
  
  all web APIs abstracts js objs and func.
  
  
  DOM --> js objects
  
  
  
  
  ---------------------------------------
  
  
  
  How JS-programs executing in browser ?
  how JS brings concurrency ?
  what is callback-functions?
  
  ---------------------------------------
  
  
  e.g
  
   chrome - browser
   
    1. JS-engine  ( v8 )
    
       call-stack
       heap
       
    2. Web APIs
    
    3. callback/message queue
    
    4. Event-Loop
    
  -----------------------------------------  
    
    
       
    
   complexities using plain-js
   ---------------------------
   
   plain-js   ===> your-code + Web API
  
  
   --> browser compatibility
   --> too much code even for simple operation
   --> performance & memory management
   
   
   
   soln:
  
  	    JS libraries
  
        a. jQuery
        b. ....
  
  
    limitations with jQuery
    -----------------------
  
  	--> low level JS library ( its works with DOM )  --> tight coupling with View and Behav.
  	--> code organization is difficult.
  	--> data-binding features
  	--> more verbose.
  	
  	
  	--------------------------------------------------
  	
  	
  	best solns:
  	
  	use JS F.Ws  ( based on MVC or MVVM arch-patterns )
  	
  	
  	1. backbone
  	2. Angular JS     ( our focus )
  	3. KO
  	4. Ember
  	
  	UI components
  	
  	5. Ext-JS
  	6. DOJO
  	
  	etc............
  	
  	
  	-------------------------------------------------
  	
  
  
  
  
  
  
  
  
  
  
  
  
  
  