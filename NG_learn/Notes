



  ng-app   --> creates '$rootScope'
  
  
  
  --> some directives will execute in existing-scope
  		
  	  e.g
  	  	
      ng-show , ng-hide , ng-click   , etc..
      
  --> some directives will create new child-scope    
  
      e.g
      
      ng-controller , ng-repeat  , etc..
      
      
  --> some directives will create new isolated-scope 
  
     e.g       
     
       ng-view , ng-transclude , etc...
       
       
       ====================================================
       
       
       How angular implementing data-binding ?
       
       
       
       while creating ng-application
      
      
       compilation-phase:
       
       for every model property in scope(s) , angular will register 'watch expression'(s) to do
       data-binding. ( View  <====> ViewModel )
       
       
       we can also register our own 'watch expression' in scope object to mionitor
       model changes to execute custom-logic.
       
       ----------
       
       all watch expressions are executed by 'digest-loop' if model is dirty.
       
       
       
        ====================================================
        
        NG - form validation
        ----------------------
        
        by default , angular will validate all forms in ng-app.
        
        angular validate form-fields in 2 ways
        
        way-1 : based on HTML-5 input types ( email , date , url ,etc.. ) and validation attributes
        way-2 : based on validation directives.
       
       
       after validating , ng keeps form/form-fields following states
       
       -> ng-pristine
       -> ng-dirty
       
       -> ng-untouched
       -> ng-touched
       
       -> ng-invalid
       -> ng-valid
       
       imp note : for each form , one model obj in scope object.
       
       
       ========================================
       
       
       
       Angular  : declarative-programming  with 'directives'
       
       
       directive  --> marker/annotation/ custom-attribute on HTML element
                      that applies JS behav to that element.
                      
                      
                we can also create custom-directive(s)
                
                even third-parties also provides them.
                
                
                -------------------------------------      
       
       
       
       
       
         NG - components
         ----------------
         a. controller
         b. filter
         c. directives
         
         d. services
         
       
       
       
       --------------------
       
       
       
       
       angular internally having jquery libraray ( jqLite ) 
       to do DOM manipulation.
       
       
       
       
       ----------------------------------
       
       
       data-binding  will happen 'watch expression'(s)
       
       angular will register 'watch expression' for every model property in scope.
       
       all 'watch expression(s) are executed by 'digest-loop' when that model get change
       on either-side ( View or  Component(s) ).
       
       
        ----------------------------------
        
        imp note:
        
        if model get change in angular-functions ( ng-click , etc... ) digest loop
        automatically get execute. so data-binding thru 'watch expression'
        
        but
        
        if model get change in non-angular func ( e.g jquery func , etc..) ,
        angular will not run 'digest-loop' by default ,we have to do manually.
        
        how to trigger digest-loop ?
        
        2-ways
        
        scope.$apply(); --> this will run all watcher(s) from $rootScope
        scope.$digest() --> this will run watcher(s) in current scope.
        
        
       
       
       ----------------------------------
       
       reference:
       
       https://www.toptal.com/angular-js/angular-js-demystifying-directives
       http://www.undefinednull.com/2014/07/07/practical-guide-to-prelink-postlink-and-controller-methods-of-angular-directives/
       
       
       =======================================
       
      
      
      NG - services
      --------------
      
      provide service(s) to other components
      
      features
	  ----------
	     
	     --> all 'singleton' components  ( one instance per ng-app )
	     --> they will get instantiated on demand ( Lazy )
	    
	    why we need service comp ?
	    
	    --> to have angular appln-behav which is common to
	    all controller(s),filter(s) and directive(s) and services(s)
	    
	    --> to maintain application-state.
	    
	    
	    e.g
	    
	    --> communicating with server-side programs
	    --> routing
	    --> i18n
	    --> consuming REST API
	    --> security..
	    --> dealing with HTML 5 APIS like localstorage
	    
	       
       
       ----------------------------------
       
       how to create NG-service comp ?
       
       
       
       serviceProvider ( factory )  ----create/provide--->  service-comp
       
       
       
       --------------------------------------
       
       
       
       Promise API / Pattern
       --------------------
       
       use: 
       
       to execute any func async
       
       
       
       e.g
       
       hotel
       
           getFood(){
           	//
           	
           	return promise;
           	
           }
       
       
       trainer
       
             doTeach(){
             
             // hungry....
             promise=hotel.getFood();// ......
             promise.then(function(){},function(){});
             
             //......
             
             }
       
       
       
       
       
       
       
       