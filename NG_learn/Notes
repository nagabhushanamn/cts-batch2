



  ng-app   --> creates '$rootScope'
  
  
  
  --> some directives will execute in existing-scope
  		
  	  e.g
  	  	
      ng-show , ng-hide , ng-click   , etc..
      
  --> some directives will create new child-scope    
  
      e.g
      
      ng-controller , ng-repeat  , etc..
      
      
  --> some directives will create new isolated-scope 
  
     e.g       
     
       ng-view , ng-transclude , etc...
       
       
       ====================================================
       
       
       How angular implementing data-binding ?
       
       
       
       while creating ng-application
      
      
       compilation-phase:
       
       for every model property in scope(s) , angular will register 'watch expression'(s) to do
       data-binding. ( View  <====> ViewModel )
       
       
       we can also register our own 'watch expression' in scope object to mionitor
       model changes to execute custom-logic.
       
       ----------
       
       all watch expressions are executed by 'digest-loop' if model is dirty.
       
       
       
        ====================================================
        
        NG - form validation
        ----------------------
        
        by default , angular will validate all forms in ng-app.
        
        angular validate form-fields in 2 ways
        
        way-1 : based on HTML-5 input types ( email , date , url ,etc.. ) and validation attributes
        way-2 : based on validation directives.
       
       
       after validating , ng keeps form/form-fields following states
       
       -> ng-pristine
       -> ng-dirty
       
       -> ng-untouched
       -> ng-touched
       
       -> ng-invalid
       -> ng-valid
       
       imp note : for each form , one model obj in scope object.
       
       
       ========================================
       
       
       
       Angular  : declarative-programming  with 'directives'
       
       
       directive  --> marker/annotation/ custom-attribute on HTML element
                      that applies JS behav to that element.
                      
                      
                we can also create custom-directive(s)
                
                even third-parties also provides them.
                
                
                -------------------------------------      
       
       
       
       
       
         NG - components
         ----------------
         a. controller
         b. filer
         
         c. directives
         d. services
         
       
       
       
       --------------------
       
       
       
       
       angular internally having jquery libraray ( jqLite ) 
       to do DOM manipulation.
       
       
       
       
       ----------------------------------
       
       
       data-binding  will happen 'watch expression'(s)
       
       angular will register 'watch expression' for every model property in scope.
       
       all 'watch expression(s) are executed by 'digest-loop' when that model get change
       on either-side ( View or  Component(s) ).
       
       
        ----------------------------------
        
        imp note:
        
        if model get change in angular-functions ( ng-click , etc... ) digest loop
        automatically get execute. so data-binding thru 'watch expression'
        
        but
        
        if model get change in non-angular func ( e.g jquery func , etc..) ,
        angular will not run 'digest-loop' by default ,we have to do manually.
        
        how to trigger digest-loop ?
        
        2-ways
        
        scope.$apply(); --> this will run all watcher(s) from $rootScope
        scope.$digest() --> this will run watcher(s) in current scope.
        
        
       
       
       ----------------------------------
       
       reference:
       
       https://www.toptal.com/angular-js/angular-js-demystifying-directives
       
       
       
       =======================================
       
       
       Service - components
       
       --------------------
       
       SPA  using Angular  
       REST using Angular
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       